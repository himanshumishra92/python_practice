{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "1d51efa9",
   "metadata": {},
   "source": [
    "### 1.To check that number is even or positive and negative"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "64241e9c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Enter a number : 2\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Even number\n"
     ]
    }
   ],
   "source": [
    "number = int(input(\"Enter a number :\"))\n",
    "if number % 2==0:\n",
    "    print(\"Even number\")\n",
    "else:\n",
    "    print(\"Number is not even\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "604fc0ef",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Even number\n",
      "Number is positive\n"
     ]
    }
   ],
   "source": [
    "num = 14\n",
    "if num % 2==0:\n",
    "    print(\"Even number\")\n",
    "if num >0:\n",
    "    print(\"Number is positive\")\n",
    "elif num==0:\n",
    "    print(\"zero\")\n",
    "else:\n",
    "    print(\"Number is negative\")\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "ee9f81fd",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Enter a number : 0\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "zero\n"
     ]
    }
   ],
   "source": [
    "num = float(input(\"Enter a number :\"))\n",
    "if num >= 0:\n",
    "    if num==0:\n",
    "        print(\"zero\")\n",
    "    else:\n",
    "        print(\"Positive number\")\n",
    "else:\n",
    "    print(\"Negative number\")\n",
    "    "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "51b9d6fa",
   "metadata": {},
   "source": [
    "### 2.less than -10 or greater than 10"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "2fcbf8a0",
   "metadata": {},
   "outputs": [
    {
     "ename": "SyntaxError",
     "evalue": "invalid syntax (<ipython-input-24-7a44566b9f93>, line 2)",
     "output_type": "error",
     "traceback": [
      "\u001b[0;36m  File \u001b[0;32m\"<ipython-input-24-7a44566b9f93>\"\u001b[0;36m, line \u001b[0;32m2\u001b[0m\n\u001b[0;31m    if i 1 - 10:\u001b[0m\n\u001b[0m         ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"
     ]
    }
   ],
   "source": [
    "i = float(input(\"Enter a number : \"))\n",
    "if i 1 - 10:\n",
    "    print(\"Greater than 10\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e4e0dbd5",
   "metadata": {},
   "source": [
    "### 3.Check the number is odd and not devisble by 3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "id": "44b4ea83",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "odd number\n",
      "number is devisble by 3\n"
     ]
    }
   ],
   "source": [
    "number = 27\n",
    "if number % 2!=0:\n",
    "    print(\"odd number\")\n",
    "else:\n",
    "    print(\"even number\")\n",
    "if number % 3==0:\n",
    "    print(\"number is devisble by 3\")\n",
    "else:\n",
    "    print(\"number is not devisble by 3\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "id": "f7adcb01",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "odd number and number is devisible by 3\n"
     ]
    }
   ],
   "source": [
    "num=27\n",
    "if num % 2!=0 and num % 3==0:\n",
    "    print(\"odd number and number is devisible by 3\")\n",
    "else:\n",
    "    print(\"number is not devisible by 3\")\n",
    "    "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f5895849",
   "metadata": {},
   "source": [
    "### 4.Devisible by 4 or 6"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 210,
   "id": "4a127e3e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "number is devisible by 4 ot 6\n"
     ]
    }
   ],
   "source": [
    "number = 18\n",
    "if number % 4==0 or number % 6==0:\n",
    "    print(\"number is devisible by 4 ot 6\")\n",
    "else:\n",
    "    print(\"number is not devisible by 4 or 6\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f2cca80f",
   "metadata": {},
   "source": [
    "## 5.Eligility of Vote and driving"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "id": "472b4b93",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Eligible for Vote and Driving\n"
     ]
    }
   ],
   "source": [
    "age=18\n",
    "if age>=18:\n",
    "    print(\"Eligible for Vote and Driving\")\n",
    "else:\n",
    "    print(\"Not Eligible\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4a16d9bb",
   "metadata": {},
   "source": [
    "### 6.Multiple range check if the given is in range of [1-10] or [20-30]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 144,
   "id": "55700a85",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "25 is range of [20-30]\n"
     ]
    }
   ],
   "source": [
    "number=25\n",
    "\n",
    "if number in range(1,10):\n",
    "    print(number, \"is range of [1,10]\")\n",
    "elif number in range(20,30):\n",
    "        print(number,\"is range of [20-30]\")\n",
    "else:\n",
    "    print(\"number is not in range\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f2cbb97d",
   "metadata": {},
   "source": [
    "### 7.Negative and Odd number"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 161,
   "id": "c8416098",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Positive number\n",
      "Odd number\n"
     ]
    }
   ],
   "source": [
    "number = 7\n",
    "\n",
    "if number < 0:\n",
    "    print(\"Negative number\")\n",
    "else:\n",
    "    print(\"Positive number\")\n",
    "    \n",
    "if number % 2!=0:\n",
    "    print(\"Odd number\")\n",
    "else:\n",
    "    print(\"Even number\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4f0c70b7",
   "metadata": {},
   "source": [
    "### 8.Eligibility for senior citizen (age greater than 60 yrs) or student (age less than 25)discount"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 172,
   "id": "93019e9d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Eligibile for senior citizen discount\n"
     ]
    }
   ],
   "source": [
    "age = 63\n",
    "\n",
    "if age>=60:\n",
    "    print(\"Eligibile for senior citizen discount\")\n",
    "        \n",
    "if age<=25:\n",
    "    print(\"Eligibile for student discount\")\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "24a86757",
   "metadata": {},
   "source": [
    "### 9.Devisibility by both 5 and 7 "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 180,
   "id": "6150a486",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "number is devisible by both 5 and 7\n"
     ]
    }
   ],
   "source": [
    "num =35\n",
    "\n",
    "if num % 5==0 and num % 7==0:\n",
    "    print(\"number is devisible by both 5 and 7\")\n",
    "else:\n",
    "    print(\"number is not devisible \")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a68e3fca",
   "metadata": {},
   "source": [
    "### 10.Non negative or Even number"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 218,
   "id": "58a95057",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Number is negative\n",
      "Even number\n"
     ]
    }
   ],
   "source": [
    "num = -8\n",
    "\n",
    "if num >=0:\n",
    "    print(\"Number is non negative\")\n",
    "else:\n",
    "    print(\"Number is negative\")\n",
    "    \n",
    "if num %2==0:\n",
    "    print(\"Even number\")\n",
    "else:\n",
    "    print(\"Odd number\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c8d1a5e9",
   "metadata": {},
   "source": [
    "### 11.Prime [2,3,5,7,11...]and Odd numbers"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 216,
   "id": "40cf1b08",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Prime number\n"
     ]
    }
   ],
   "source": [
    "number =7\n",
    "\n",
    "if number >1 and number %1==0:\n",
    "    print('Prime number')\n",
    "else:\n",
    "    print(\"Not a prime number\")\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ccd73bfd",
   "metadata": {},
   "source": [
    "### 12.Eligibilty for discount and free shipping"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 246,
   "id": "02b0be16",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Eligibile for free shipping\n"
     ]
    }
   ],
   "source": [
    "P_Amount =120\n",
    "\n",
    "if P_Amount >=150 and P_Amount>=120:\n",
    "    print(\"Eligibile for discount and free shipping\")\n",
    "elif P_Amount>=120:\n",
    "    print(\"Eligibile for free shipping\")\n",
    "else:\n",
    "    print(\"Not eigible for discount and free shipping\")\n",
    "        \n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "27b7f1d2",
   "metadata": {},
   "source": [
    "### 13.Devisible by 3 or 8"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 252,
   "id": "a7ffe35f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Number is devisible by 3 or 8\n"
     ]
    }
   ],
   "source": [
    "number =24\n",
    "\n",
    "if number % 3==0 and number % 8==0:\n",
    "    print(\"Number is devisible by 3 or 8\")\n",
    "else:\n",
    "    print(\"Number is not devisible by 3 or 8\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c79b7f58",
   "metadata": {},
   "source": [
    "### 14.Non positive and even number"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 305,
   "id": "19fc81ad",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Non positive number\n",
      "Even number\n"
     ]
    }
   ],
   "source": [
    "number = -6\n",
    "\n",
    "if number >0:\n",
    "    print(\"Positive number\")\n",
    "else:\n",
    "    print(\"Non positive number\")\n",
    "if number %2==0:\n",
    "    print(\"Even number\")\n",
    "else:\n",
    "    print(\"Odd number\")\n",
    "\n",
    "    \n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "03e15f2a",
   "metadata": {},
   "source": [
    "### 15.Age group clasification with AND"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 317,
   "id": "52386750",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Teenager\n"
     ]
    }
   ],
   "source": [
    "age =13\n",
    "\n",
    "if age <13 :\n",
    "    print(\"Child\")\n",
    "if age in range (13,19):\n",
    "    print(\"Teenager\")\n",
    "if age >20:\n",
    "    print(\"Adult\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1a3e3998",
   "metadata": {},
   "source": [
    "### 16.Python Fuction divisible by 2 or 5"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 330,
   "id": "b0aa6a26",
   "metadata": {},
   "outputs": [
    {
     "ename": "TypeError",
     "evalue": "dev() takes 0 positional arguments but 1 was given",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-330-d346f7bd1329>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 6\u001b[0;31m \u001b[0mdev\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m20\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[0;31mTypeError\u001b[0m: dev() takes 0 positional arguments but 1 was given"
     ]
    }
   ],
   "source": [
    "def dev():\n",
    "    if n % 2==0:\n",
    "        print(\"number is devisible by 2 or 5\")\n",
    "        \n",
    "        \n",
    "dev(25)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "38d8f264",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
